// <auto-generated />
using System;
using EngineeringCalc.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EngineeringCalc.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20251006130349_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EngineeringCalc.Models.Calculation", b =>
                {
                    b.Property<int>("CalculationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CalculationId"));

                    b.Property<string>("CalculationTitle")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CurrentRevisionId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("JobId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CalculationId");

                    b.HasIndex("CurrentRevisionId");

                    b.HasIndex("JobId", "CalculationTitle");

                    b.ToTable("Calculations");
                });

            modelBuilder.Entity("EngineeringCalc.Models.CalculationRevision", b =>
                {
                    b.Property<int>("RevisionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RevisionId"));

                    b.Property<int>("CalculationId")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RevisionNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RevisionId");

                    b.HasIndex("CalculationId");

                    b.ToTable("CalculationRevisions");
                });

            modelBuilder.Entity("EngineeringCalc.Models.Card", b =>
                {
                    b.Property<int>("CardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CardId"));

                    b.Property<string>("CapacityVariable")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CardName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CardType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CardVersion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CodeTemplate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("DesignLoadVariable")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("InputVariables")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MathMLFormula")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OutputVariables")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CardId");

                    b.HasIndex("CardType");

                    b.ToTable("Cards");
                });

            modelBuilder.Entity("EngineeringCalc.Models.CardInstance", b =>
                {
                    b.Property<int>("CardInstanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CardInstanceId"));

                    b.Property<double?>("CalculatedCapacity")
                        .HasColumnType("float");

                    b.Property<string>("CalculatedResults")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CalculationRevisionId")
                        .HasColumnType("int");

                    b.Property<int>("CardId")
                        .HasColumnType("int");

                    b.Property<string>("CheckResult")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("DesignLoad")
                        .HasColumnType("float");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastCalculated")
                        .HasColumnType("datetime2");

                    b.Property<string>("LocalVariables")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CardInstanceId");

                    b.HasIndex("CalculationRevisionId");

                    b.HasIndex("CardId");

                    b.ToTable("CardInstances");
                });

            modelBuilder.Entity("EngineeringCalc.Models.GlobalVariable", b =>
                {
                    b.Property<int>("GlobalVariableId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GlobalVariableId"));

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("JobId")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("VariableName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("VariableValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GlobalVariableId");

                    b.HasIndex("JobId", "VariableName");

                    b.ToTable("GlobalVariables");
                });

            modelBuilder.Entity("EngineeringCalc.Models.Job", b =>
                {
                    b.Property<int>("JobId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JobId"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("JobName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.HasKey("JobId");

                    b.HasIndex("ProjectId", "JobName");

                    b.ToTable("Jobs");
                });

            modelBuilder.Entity("EngineeringCalc.Models.MaterialLibrary", b =>
                {
                    b.Property<int>("MaterialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaterialId"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Grade")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MaterialType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Properties")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Standard")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaterialId");

                    b.HasIndex("MaterialType", "Grade");

                    b.ToTable("MaterialLibrary");
                });

            modelBuilder.Entity("EngineeringCalc.Models.Project", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjectId"));

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ProjectId");

                    b.HasIndex("ProjectName");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("EngineeringCalc.Models.Calculation", b =>
                {
                    b.HasOne("EngineeringCalc.Models.CalculationRevision", "CurrentRevision")
                        .WithMany()
                        .HasForeignKey("CurrentRevisionId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("EngineeringCalc.Models.Job", "Job")
                        .WithMany("Calculations")
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CurrentRevision");

                    b.Navigation("Job");
                });

            modelBuilder.Entity("EngineeringCalc.Models.CalculationRevision", b =>
                {
                    b.HasOne("EngineeringCalc.Models.Calculation", "Calculation")
                        .WithMany("Revisions")
                        .HasForeignKey("CalculationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Calculation");
                });

            modelBuilder.Entity("EngineeringCalc.Models.CardInstance", b =>
                {
                    b.HasOne("EngineeringCalc.Models.CalculationRevision", "CalculationRevision")
                        .WithMany("CardInstances")
                        .HasForeignKey("CalculationRevisionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EngineeringCalc.Models.Card", "Card")
                        .WithMany("CardInstances")
                        .HasForeignKey("CardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CalculationRevision");

                    b.Navigation("Card");
                });

            modelBuilder.Entity("EngineeringCalc.Models.GlobalVariable", b =>
                {
                    b.HasOne("EngineeringCalc.Models.Job", "Job")
                        .WithMany("GlobalVariables")
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Job");
                });

            modelBuilder.Entity("EngineeringCalc.Models.Job", b =>
                {
                    b.HasOne("EngineeringCalc.Models.Project", "Project")
                        .WithMany("Jobs")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("EngineeringCalc.Models.Calculation", b =>
                {
                    b.Navigation("Revisions");
                });

            modelBuilder.Entity("EngineeringCalc.Models.CalculationRevision", b =>
                {
                    b.Navigation("CardInstances");
                });

            modelBuilder.Entity("EngineeringCalc.Models.Card", b =>
                {
                    b.Navigation("CardInstances");
                });

            modelBuilder.Entity("EngineeringCalc.Models.Job", b =>
                {
                    b.Navigation("Calculations");

                    b.Navigation("GlobalVariables");
                });

            modelBuilder.Entity("EngineeringCalc.Models.Project", b =>
                {
                    b.Navigation("Jobs");
                });
#pragma warning restore 612, 618
        }
    }
}
